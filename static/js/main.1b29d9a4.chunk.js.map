{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","routes/Forum.js","components/Timetable.js","routes/Profile.js","components/Navigation.js","routes/Detail.js","components/PostFactory.js","components/TitleFactory.js","components/Post.js","components/Home.js","routes/LoadTimetable.js","components/Router.js","components/App.js","apollo.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","dbService","storageService","AuthForm","userObj","refreshUser","SHA256","s","safe_add","x","y","lsw","S","X","n","R","Ch","z","Maj","Sigma0256","Sigma1256","Gamma0256","binarray","hex_tab","str","i","length","charAt","binb2hex","m","l","a","b","c","d","e","f","g","h","j","T1","T2","K","HASH","W","core_sha256","bin","charCodeAt","str2binb","string","replace","utftext","String","fromCharCode","Utf8Encode","useState","email","setEmail","password","setPassword","repassword","setRepassword","name","setName","newAccount","setNewAccount","error","setError","onChange","event","target","value","onSubmit","preventDefault","alert","createUserWithEmailAndPassword","then","dbUserObj","collection","doc","user","uid","set","displayName","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","to","Auth","Nweet","nweetObj","num","id","title","Forum","category","nweets","setNweets","useEffect","where","get","querySnapshot","nweetArray","forEach","push","data","border","bordercolor","style","marginTop","map","nweet","key","date","Date","weekday","getDay","apiQuery","gql","useQuery","week","getMonth","getDate","day","index","subject","history","useHistory","setDisplayName","Timetable","signOut","priority","Navigation","Detail","postId","useParams","setTitle","post","setPost","creater","setCreater","createrName","setCreaterName","createTime","setCreateTime","exists","creatorId","creatorName","desc","createdAt","catch","console","log","onDeleteClick","window","confirm","delete","icon","faTrash","size","dangerouslySetInnerHTML","__html","modules","toolbar","header","list","indent","align","color","background","formats","PostFactory","height","theme","TitleFactory","onCategoryChange","maxLength","disabled","hidden","Post","setDesc","setCategory","en","result","document","getElementsByClassName","focus","st","indexOf","attachmentRef","ref","child","uuidv4","putString","substring","response","getDownloadURL","downloadURL","hour","getHours","getFullYear","getMinutes","getSeconds","add","Home","AppRouter","isLoggedIn","maxWidth","width","margin","display","flexWrap","justifyContent","exact","path","Profile","LoadTimetable","App","init","setInit","setUserObj","adminList","onAuthStateChanged","includes","updateProfile","args","currentUser","Boolean","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1b29d9a4.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { Link } from \"react-router-dom\";\n\nconst AuthForm = (userObj, refreshUser) => {\n    function SHA256(s) {\n        var chrsz = 8;\n        var hexcase = 0;\n\n        function safe_add(x, y) {\n            var lsw = (x & 0xffff) + (y & 0xffff);\n            var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xffff);\n        }\n\n        function S(X, n) {\n            return (X >>> n) | (X << (32 - n));\n        }\n        function R(X, n) {\n            return X >>> n;\n        }\n        function Ch(x, y, z) {\n            return (x & y) ^ (~x & z);\n        }\n        function Maj(x, y, z) {\n            return (x & y) ^ (x & z) ^ (y & z);\n        }\n        function Sigma0256(x) {\n            return S(x, 2) ^ S(x, 13) ^ S(x, 22);\n        }\n        function Sigma1256(x) {\n            return S(x, 6) ^ S(x, 11) ^ S(x, 25);\n        }\n        function Gamma0256(x) {\n            return S(x, 7) ^ S(x, 18) ^ R(x, 3);\n        }\n        function Gamma1256(x) {\n            return S(x, 17) ^ S(x, 19) ^ R(x, 10);\n        }\n\n        function core_sha256(m, l) {\n            var K = [\n                0x428a2f98,\n                0x71374491,\n                0xb5c0fbcf,\n                0xe9b5dba5,\n                0x3956c25b,\n                0x59f111f1,\n                0x923f82a4,\n                0xab1c5ed5,\n                0xd807aa98,\n                0x12835b01,\n                0x243185be,\n                0x550c7dc3,\n                0x72be5d74,\n                0x80deb1fe,\n                0x9bdc06a7,\n                0xc19bf174,\n                0xe49b69c1,\n                0xefbe4786,\n                0xfc19dc6,\n                0x240ca1cc,\n                0x2de92c6f,\n                0x4a7484aa,\n                0x5cb0a9dc,\n                0x76f988da,\n                0x983e5152,\n                0xa831c66d,\n                0xb00327c8,\n                0xbf597fc7,\n                0xc6e00bf3,\n                0xd5a79147,\n                0x6ca6351,\n                0x14292967,\n                0x27b70a85,\n                0x2e1b2138,\n                0x4d2c6dfc,\n                0x53380d13,\n                0x650a7354,\n                0x766a0abb,\n                0x81c2c92e,\n                0x92722c85,\n                0xa2bfe8a1,\n                0xa81a664b,\n                0xc24b8b70,\n                0xc76c51a3,\n                0xd192e819,\n                0xd6990624,\n                0xf40e3585,\n                0x106aa070,\n                0x19a4c116,\n                0x1e376c08,\n                0x2748774c,\n                0x34b0bcb5,\n                0x391c0cb3,\n                0x4ed8aa4a,\n                0x5b9cca4f,\n                0x682e6ff3,\n                0x748f82ee,\n                0x78a5636f,\n                0x84c87814,\n                0x8cc70208,\n                0x90befffa,\n                0xa4506ceb,\n                0xbef9a3f7,\n                0xc67178f2,\n            ];\n\n            var HASH = [\n                0x6a09e667,\n                0xbb67ae85,\n                0x3c6ef372,\n                0xa54ff53a,\n                0x510e527f,\n                0x9b05688c,\n                0x1f83d9ab,\n                0x5be0cd19,\n            ];\n\n            var W = [64];\n            var a, b, c, d, e, f, g, h, i, j;\n            var T1, T2;\n\n            m[l >> 5] |= 0x80 << (24 - (l % 32));\n            m[(((l + 64) >> 9) << 4) + 15] = l;\n\n            for (i = 0; i < m.length; i += 16) {\n                a = HASH[0];\n                b = HASH[1];\n                c = HASH[2];\n                d = HASH[3];\n                e = HASH[4];\n                f = HASH[5];\n                g = HASH[6];\n                h = HASH[7];\n\n                for (j = 0; j < 64; j++) {\n                    if (j < 16) W[j] = m[j + i];\n                    else\n                        W[j] = safe_add(\n                            safe_add(\n                                safe_add(Gamma1256(W[j - 2]), W[j - 7]),\n                                Gamma0256(W[j - 15])\n                            ),\n                            W[j - 16]\n                        );\n\n                    T1 = safe_add(\n                        safe_add(\n                            safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)),\n                            K[j]\n                        ),\n                        W[j]\n                    );\n                    T2 = safe_add(Sigma0256(a), Maj(a, b, c));\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = safe_add(d, T1);\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = safe_add(T1, T2);\n                }\n\n                HASH[0] = safe_add(a, HASH[0]);\n                HASH[1] = safe_add(b, HASH[1]);\n                HASH[2] = safe_add(c, HASH[2]);\n                HASH[3] = safe_add(d, HASH[3]);\n                HASH[4] = safe_add(e, HASH[4]);\n                HASH[5] = safe_add(f, HASH[5]);\n                HASH[6] = safe_add(g, HASH[6]);\n                HASH[7] = safe_add(h, HASH[7]);\n            }\n            return HASH;\n        }\n\n        function str2binb(str) {\n            var bin = [];\n            var mask = (1 << chrsz) - 1;\n            for (var i = 0; i < str.length * chrsz; i += chrsz) {\n                bin[i >> 5] |=\n                    (str.charCodeAt(i / chrsz) & mask) << (24 - (i % 32));\n            }\n            return bin;\n        }\n\n        function Utf8Encode(string) {\n            string = string.replace(/\\r\\n/g, \"\\n\");\n            var utftext = \"\";\n\n            for (var n = 0; n < string.length; n++) {\n                var c = string.charCodeAt(n);\n\n                if (c < 128) {\n                    utftext += String.fromCharCode(c);\n                } else if (c > 127 && c < 2048) {\n                    utftext += String.fromCharCode((c >> 6) | 192);\n                    utftext += String.fromCharCode((c & 63) | 128);\n                } else {\n                    utftext += String.fromCharCode((c >> 12) | 224);\n                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                    utftext += String.fromCharCode((c & 63) | 128);\n                }\n            }\n\n            return utftext;\n        }\n\n        function binb2hex(binarray) {\n            var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n            var str = \"\";\n            for (var i = 0; i < binarray.length * 4; i++) {\n                str +=\n                    hex_tab.charAt(\n                        (binarray[i >> 2] >> ((3 - (i % 4)) * 8 + 4)) & 0xf\n                    ) +\n                    hex_tab.charAt(\n                        (binarray[i >> 2] >> ((3 - (i % 4)) * 8)) & 0xf\n                    );\n            }\n            return str;\n        }\n\n        s = Utf8Encode(s);\n        return binb2hex(core_sha256(str2binb(s), s.length * chrsz));\n    }\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repassword, setRepassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(false);\n    let [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        } else if (name === \"repassword\") {\n            setRepassword(value);\n        } else if (name === \"nameInput\") {\n            setName(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            if (newAccount) {\n                if (password !== repassword) {\n                    alert(\"비밀번호와 재입력한 비밀번호가 다릅니다.\");\n                    return;\n                }\n\n                await authService\n                    .createUserWithEmailAndPassword(email, password)\n                    .then((dbUserObj) => {\n                        dbService\n                            .collection(\"userInfo\")\n                            .doc(dbUserObj.user.uid)\n                            .set({\n                                displayName: name,\n                                email: email,\n                                password: SHA256(password),\n                            });\n                    });\n            } else {\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"이메일\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"비밀번호\"\n                    required\n                    value={password}\n                    className=\"authInput\"\n                    onChange={onChange}\n                />\n                {newAccount && (\n                    <>\n                        <input\n                            name=\"repassword\"\n                            type=\"password\"\n                            placeholder=\"비밀번호 재입력\"\n                            required\n                            value={repassword}\n                            className=\"authInput\"\n                            onChange={onChange}\n                        />\n                        <input\n                            name=\"nameInput\"\n                            type=\"text\"\n                            placeholder=\"이름\"\n                            required\n                            value={name}\n                            className=\"authInput\"\n                            onChange={onChange}\n                        />\n                    </>\n                )}\n\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccount ? \"회원가입\" : \"로그인\"}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n                <span onClick={toggleAccount} className=\"authSwitch\">\n                    {newAccount ? \"로그인\" : \"회원가입\"}\n                </span>\n                <Link to=\"/time\" className=\"authInput timeSubmit\">\n                    시간표\n                </Link>\n            </form>\n        </>\n    );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = (userObj, refreshUser) => {\n    return (\n        <div className=\"authContainer\">\n            <div className=\"authTitle\">2-10 포럼</div>\n            <div className=\"authBtns\">\n                <AuthForm userObj={userObj} refreshUser={refreshUser} />\n            </div>\n        </div>\n    );\n};\nexport default Auth;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Nweet = ({ nweetObj, num }) => {\n    return (\n        <tr className=\"nweet\">\n            <th>\n                <Link to={`/detail/${nweetObj.id}`}>\n                    <h4>\n                        {num + 1}\n                        {\". \"}\n                        {nweetObj.title}\n                    </h4>\n                </Link>\n            </th>\n        </tr>\n    );\n};\n\nexport default Nweet;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport { Link } from \"react-router-dom\";\n\nconst Forum = ({ category }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        dbService\n            .collection(\"nweets\")\n            .where(\"category\", \"==\", category)\n            .get()\n            .then((querySnapshot) => {\n                const nweetArray = [];\n                querySnapshot.forEach((doc) => {\n                    nweetArray.push({ id: doc.id, ...doc.data() });\n                });\n                setNweets(nweetArray);\n            });\n    }, [category]);\n    return (\n        <div className=\"container\">\n            <div className=\"center\">\n                <Link to={\"/new/\" + category} className=\"factoryInput__link\">\n                    글 쓰기\n                </Link>\n            </div>\n            <table border=\"10\" bordercolor=\"red\" style={{ marginTop: 30 }}>\n                <tbody>\n                    {nweets.map((nweet, n) => {\n                        return (\n                            <Nweet key={nweet.id} nweetObj={nweet} num={n} />\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\nexport default Forum;\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nexport default () => {\n    const date = new Date();\n    const weekday = date.getDay() - 1;\n    const apiQuery = gql`\n        {\n            week(weekday: ${weekday}) {\n                grade\n                class\n                weekdayString\n                classTime\n                teacher\n                subject\n            }\n        }\n    `;\n    const { data } = useQuery(apiQuery);\n    const week = data ? data.week : null;\n    return (\n        <div className=\"profile__title\">\n            <div className=\"profile__timeTable__Title\">{`<${\n                date.getMonth() + 1\n            }월 ${date.getDate()}일 시간표>`}</div>\n            <table className=\"profile__timeTable\">\n                <thead>\n                    <tr className=\"profile__timeTable__tr\">\n                        <th>교시</th>\n                        <th>과목</th>\n                    </tr>\n                </thead>\n                <tbody className=\"profile__timeTable\">\n                    {week &&\n                        week.map((day, index) => {\n                            if (day.subject)\n                                return (\n                                    <tr\n                                        className=\"profile__timeTable__tr\"\n                                        key={\"table\" + day.subject}\n                                    >\n                                        <td\n                                            key={\"index\" + day.subject}\n                                            className=\"profile__timeTable__content\"\n                                        >\n                                            {index + 1 + \"교시\"}\n                                        </td>\n                                        <td\n                                            key={\"time\" + day.subject}\n                                            className=\"profile__timeTable__subject\"\n                                        >\n                                            {day.subject}\n                                        </td>\n                                    </tr>\n                                );\n                            else return null;\n                        })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nimport Timetable from \"components/Timetable\";\n\nexport default ({ userObj }) => {\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        alert(\"로그아웃 요청을 정상적으로 처리하였습니다.\");\n        history.push(\"/\");\n    };\n    const [displayName, setDisplayName] = useState(null);\n    dbService\n        .collection(\"userInfo\")\n        .doc(userObj.uid)\n        .get()\n        .then((doc) => {\n            setDisplayName(doc.data().displayName);\n        });\n\n    return (\n        <div className=\"container\">\n            <span className=\"profile__nameHello\">\n                {displayName}님 안녕하세요.\n            </span>\n            <Timetable />\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                로그아웃\n            </span>\n            <div className=\"center\" style={{ marginTop: 50 }}>\n                {userObj.priority ? (\n                    <div className=\"post__creator\">You are an admin.</div>\n                ) : (\n                    <></>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => (\n    <nav className=\"gnb\">\n        <ul>\n            <li>\n                <Link className=\"navLink\" to=\"/\">\n                    홈\n                </Link>\n            </li>\n            <li>\n                <Link className=\"navLink\" to=\"/test\">\n                    <span>수행평가 게시판</span>\n                </Link>\n            </li>\n            <li>\n                <Link className=\"navLink\" to=\"/schedule\">\n                    <span>학사일정 게시판</span>\n                </Link>\n            </li>\n            <li>\n                <Link className=\"navLink\" to=\"/free\">\n                    <span>자유 게시판</span>\n                </Link>\n            </li>\n            <li>\n                <Link className=\"navLink\" to=\"/profile\">\n                    <span>프로필</span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nconst Detail = ({ userObj }) => {\n    const { postId } = useParams();\n\n    const [title, setTitle] = useState(\"\");\n    const [post, setPost] = useState(\"\");\n    const [creater, setCreater] = useState(\"\");\n    const [createrName, setCreaterName] = useState(\"\");\n    const [createTime, setCreateTime] = useState(\"\");\n    const history = useHistory();\n    useEffect(() => {\n        dbService\n            .collection(\"nweets\")\n            .doc(postId)\n            .get()\n            .then((doc) => {\n                if (doc.exists) {\n                    setCreater(doc.data().creatorId);\n                    setCreaterName(doc.data().creatorName);\n                    setPost(doc.data().desc);\n                    setTitle(doc.data().title);\n                    setCreateTime(doc.data().createdAt);\n                } else {\n                    alert(\"삭제되었거나 없는 게시물입니다.\");\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    });\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"정말 삭제하시겠습니까?\");\n        if (ok) {\n            await dbService.doc(`nweets/${postId}`).delete();\n            history.push(\"/\");\n        }\n    };\n\n    return (\n        <>\n            <span className=\"post__title\">\n                {title}\n                {creater === userObj.uid || userObj.priority ? (\n                    <span onClick={onDeleteClick}>\n                        <FontAwesomeIcon\n                            icon={faTrash}\n                            size=\"xs\"\n                            className=\"trashIcon\"\n                        />\n                    </span>\n                ) : (\n                    <></>\n                )}\n            </span>\n\n            <hr className=\"post__hr\" />\n            <div className=\"post__desc\">\n                <div\n                    className=\"ql-editor\"\n                    dangerouslySetInnerHTML={{ __html: post }}\n                ></div>\n\n                <div className=\"post__creator\">{createrName}</div>\n                <div className=\"post__creator\">{createTime}</div>\n            </div>\n        </>\n    );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst modules = {\n    toolbar: [\n        //[{ 'font': [] }],\n        [{ header: [1, 2, false] }],\n        [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n        [\n            { list: \"ordered\" },\n            { list: \"bullet\" },\n            { indent: \"-1\" },\n            { indent: \"+1\" },\n        ],\n        [\"link\", \"image\"],\n        [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\n        [\"clean\"],\n    ],\n};\n\nconst formats = [\n    //'font',\n    \"header\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"align\",\n    \"color\",\n    \"background\",\n];\n\nconst PostFactory = ({ value, onChange }) => {\n    return (\n        <div className=\"postfactory\" style={{ height: \"650px\" }}>\n            <ReactQuill\n                style={{ height: \"600px\" }}\n                theme=\"snow\"\n                modules={modules}\n                formats={formats}\n                value={value || \"\"}\n                onChange={onChange}\n            />\n        </div>\n    );\n};\n\nexport default PostFactory;\n","import React from \"react\";\n\nconst TitleFactory = ({ title, onChange, category, onCategoryChange }) => {\n    return (\n        <>\n            <input\n                className=\"factoryInput__title\"\n                value={title || \"\"}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"제목을 입력하세요.\"\n                maxLength={120}\n            />\n            <form>\n                <select\n                    className=\"titleFactory__select\"\n                    value={category}\n                    onChange={onCategoryChange}\n                >\n                    <option disabled hidden>\n                        게시판을 선택해주세요.\n                    </option>\n                    <option>수행평가 게시판</option>\n                    <option>학사일정 게시판</option>\n                    <option>자유 게시판</option>\n                </select>\n            </form>\n        </>\n    );\n};\n\nexport default TitleFactory;\n","import React, { useState } from \"react\";\nimport PostFactory from \"./PostFactory\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TitleFactory from \"./TitleFactory\";\nimport { storageService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router\";\n\nconst Post = ({ userObj }) => {\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [category, setCategory] = useState(\"게시판을 선택해주세요.\");\n    const [name, setName] = useState(\"\");\n    const history = useHistory();\n    let en = -1;\n    let result = \"\";\n\n    dbService\n        .collection(\"userInfo\")\n        .doc(userObj.uid)\n        .get()\n        .then((doc) => {\n            setName(doc.data().displayName);\n        });\n    const onSubmit = async (event) => {\n        result = desc;\n        if (title === \"\") {\n            alert(\"제목을 입력하세요.\");\n            document.getElementsByClassName(\"factoryInput__title\")[0].focus();\n            return;\n        } else if (category === \"게시판을 선택해주세요.\") {\n            alert(\"카테고리를 선택하세요.\");\n            document.getElementsByClassName(\"titleFactory__select\")[0].focus();\n            return;\n        } else if (desc === \"\") {\n            alert(\"본문을 입력하세요.\");\n            document.getElementsByClassName(\"ql-editor\")[0].focus();\n            return;\n        }\n\n        document.getElementsByClassName(\"factoryInput__arrow\")[0].value =\n            \"게시중...\";\n        while (1) {\n            let st = result.indexOf('<img src=\"', en);\n            en = result.indexOf('\">', st + 1);\n            if (st === -1) {\n                break;\n            }\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                result.substring(st + 10, en),\n                \"data_url\"\n            );\n            const downloadURL = await response.ref.getDownloadURL();\n            result =\n                result.substring(0, st + 10) +\n                downloadURL +\n                result.substring(en, result.length);\n            en = result.indexOf('\">', st + 1);\n            console.log(result);\n        }\n        event.preventDefault();\n\n        const date = new Date();\n        const hour =\n            date.getHours() < 12\n                ? \"오전 \" + date.getHours()\n                : \"오후 \" + (date.getHours() - 12);\n        const createdAt = `${date.getFullYear()}년 ${\n            date.getMonth() + 1\n        }월 ${date.getDate()}일 ${hour}시 ${date.getMinutes()}분 ${date.getSeconds()}초`;\n        console.log(name);\n        const nweetObj = {\n            title: title,\n            desc: result,\n            category: category,\n            createdAt: createdAt,\n            creatorId: userObj.uid,\n            creatorName: name,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setTitle(\"\");\n        setDesc(\"\");\n        history.push(\"/\");\n    };\n    const onTitleChange = (e) => {\n        const {\n            target: { value },\n        } = e;\n        setTitle(value);\n    };\n\n    const onCategoryChange = (e) => {\n        const {\n            target: { value },\n        } = e;\n        setCategory(value);\n    };\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div>\n                <TitleFactory\n                    title={title}\n                    onChange={onTitleChange}\n                    category={category}\n                    onCategoryChange={onCategoryChange}\n                    className=\"titlefactory\"\n                />\n                <PostFactory value={desc} onChange={setDesc} />\n                <div className=\"center\">\n                    <input\n                        type=\"submit\"\n                        value=\"게시\"\n                        className=\"factoryInput__arrow\"\n                    />\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n    return (\n        <div className=\"home__title\">\n            <section className=\"scontainer\">\n                <h1 className=\"title\">\n                    <span>안녕하세요</span>\n                    <span>2-10 포럼에 오신 것을</span>\n                    <span>환영합니다.</span>\n                </h1>\n\n                <h2 className=\"title\">\n                    <span>이 사이트는 정보를</span>\n                    <span>쉽고 빠르게 공유하기 위한</span>\n                    <span>사이트입니다.</span>\n                </h2>\n            </section>\n            <Link to=\"/new\">\n                <span className=\"home__link\">글쓰기</span>\n            </Link>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Timetable from \"../components/Timetable\";\n\nexport default () => {\n    return (\n        <div className=\"timetable__background\">\n            <Timetable />\n        </div>\n    );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Forum from \"routes/Forum\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\nimport Detail from \"routes/Detail\";\nimport Post from \"./Post\";\nimport Home from \"./Home\";\nimport LoadTimetable from \"../routes/LoadTimetable\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation />}\n            <Switch>\n                <>\n                    {isLoggedIn ? (\n                        <div\n                            style={{\n                                maxWidth: 890,\n                                width: \"100%\",\n                                margin: \"0 auto\",\n                                marginTop: 50,\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <Route exact path=\"/\">\n                                <Home />\n                            </Route>\n                            <Route exact path=\"/test\">\n                                <Forum\n                                    userObj={userObj}\n                                    category=\"수행평가 게시판\"\n                                />\n                            </Route>\n                            <Route exact path=\"/schedule\">\n                                <Forum\n                                    userObj={userObj}\n                                    category=\"학사일정 게시판\"\n                                />\n                            </Route>\n                            <Route exact path=\"/free\">\n                                <Forum\n                                    userObj={userObj}\n                                    category=\"자유 게시판\"\n                                />\n                            </Route>\n                            <Route exact path=\"/profile\">\n                                <Profile\n                                    userObj={userObj}\n                                    refreshUser={refreshUser}\n                                />\n                            </Route>\n                            <Route exact path=\"/detail/:postId\">\n                                <Detail userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/new\">\n                                <Post\n                                    userObj={userObj}\n                                    refreshUser={refreshUser}\n                                />\n                            </Route>\n                            <Route exact path=\"/new/:category\">\n                                <Post userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/time\">\n                                <LoadTimetable />\n                            </Route>\n                        </div>\n                    ) : (\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth\n                                    userObj={userObj}\n                                    refreshUser={refreshUser}\n                                />\n                            </Route>\n                            <Route exact path=\"/detail/:postId\">\n                                <Detail userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/time\">\n                                <LoadTimetable />\n                            </Route>\n                        </>\n                    )}\n                </>\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        const adminList = [\"GIlYEEsfxsOOxPZQdcz7EfLrBdg1\"];\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                const priority = adminList.includes(user.uid) ? 1 : 0;\n                // 1 = admin, 0 = not admin\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    priority: priority,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const adminList = [\"GIlYEEsfxsOOxPZQdcz7EfLrBdg1\"];\n        const user = authService.currentUser;\n        const priority = adminList.includes(user.uid) ? 1 : 0;\n        // 1 = admin, 0 = not admin\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            priority: priority,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <BrowserRouter>\n                    <AppRouter\n                        refreshUser={refreshUser}\n                        isLoggedIn={Boolean(userObj)}\n                        userObj={userObj}\n                    />\n                </BrowserRouter>\n            ) : (\n                \"Initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n    uri: \"http://ubuntu.kinqq.live:4000/\",\n    cache: new InMemoryCache(),\n});\n\nexport default client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\nimport { ApolloProvider } from \"@apollo/client/react\";\nimport client from \"apollo\";\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}