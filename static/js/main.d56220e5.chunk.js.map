{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","routes/Detail.js","components/PostFactory.js","components/TitleFactory.js","components/Post.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","editPriority","text","to","id","title","NweetFactory","userObj","Home","nweets","setNweets","useEffect","collection","orderBy","onSnapshot","snapshot","nweetArray","docs","map","doc","marginTop","nweet","key","creatorId","uid","priority","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","Detail","postId","useParams","setTitle","post","setPost","creater","setCreater","get","then","exists","desc","alert","catch","onDeleteClick","window","confirm","delete","faTrash","dangerouslySetInnerHTML","__html","modules","toolbar","header","list","indent","align","background","formats","PostFactory","height","theme","TitleFactory","maxLength","Post","setDesc","document","getElementsByClassName","focus","day","Date","createdAt","toLocaleString","add","e","AppRouter","isLoggedIn","maxWidth","width","margin","flexWrap","exact","path","Profile","App","init","setInit","setUserObj","adminList","onAuthStateChanged","user","includes","args","currentUser","Boolean","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d56220e5.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    let [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email,\n                    password\n                );\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    className=\"authInput\"\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider =\n            name === \"google\"\n                ? new firebaseInstance.auth.GoogleAuthProvider()\n                : new firebaseInstance.auth.GithubAuthProvider();\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"5x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button\n                    onClick={onSocialClick}\n                    name=\"google\"\n                    className=\"authBtn\"\n                >\n                    <FontAwesomeIcon icon={faGoogle} size=\"2x\" />\n                </button>\n                <button\n                    onClick={onSocialClick}\n                    name=\"github\"\n                    className=\"authBtn\"\n                >\n                    <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { Link } from \"react-router-dom\";\nconst Nweet = ({ nweetObj, editPriority }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\n            \"Are you sure you want to delete this nweet?\"\n        );\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n    return (\n        <div className=\"nweet\">\n            <Link to={`/detail/${nweetObj.id}`}>\n                <h4>{nweetObj.title}</h4>\n            </Link>\n            {/* {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your nweet\"\n                            value={newNweet}\n                            required\n                            autoFocus\n                            onChange={onChange}\n                            className=\"formInput\"\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Update Nweet\"\n                            className=\"formBtn\"\n                        />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.title}</h4>\n                    {<div className=\"nweet__actions\">\n                        {editPriority && (\n                            <>\n                                <span onClick={onDeleteClick}>\n                                    <FontAwesomeIcon icon={faTrash} />\n                                </span>\n                                <span onClick={toggleEditing}>\n                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                </span>\n                                <Link to={`/detail/${nweetObj.id}`}>\n                                    <FontAwesomeIcon icon={faUser} />\n                                </Link>\n                            </>\n                        )}\n                    </div> }\n                </>\n            )} */}\n        </div>\n    );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                attachment,\n                \"data_url\"\n            );\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const day = new Date();\n        const nweetObj = {\n            text: nweet,\n            createdAt: day.toLocaleString(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        if (Boolean(theFile)) {\n            reader.readAsDataURL(theFile);\n        }\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        // <form onSubmit={onSubmit} className=\"factoryForm\">\n        //     <div className=\"factoryInput__container\">\n        //         <input\n        //             className=\"factoryInput__input\"\n        //             value={nweet}\n        //             onChange={onChange}\n        //             type=\"text\"\n        //             placeholder=\"What's on your mind?\"\n        //             maxLength={120}\n        //         />\n        //         <input\n        //             type=\"submit\"\n        //             value=\"&rarr;\"\n        //             className=\"factoryInput__arrow\"\n        //         />\n        //     </div>\n        //     <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        //         <span>Add photos</span>\n        //         <FontAwesomeIcon icon={faPlus} />\n        //     </label>\n        //     <input\n        //         id=\"attach-file\"\n        //         type=\"file\"\n        //         accept=\"image/*\"\n        //         onChange={onFileChange}\n        //         style={{\n        //             opacity: 0,\n        //         }}\n        //     />\n        //     {attachment && (\n        //         <div className=\"factoryForm__attachment\">\n        //             <img\n        //                 src={attachment}\n        //                 style={{\n        //                     backgroundImage: attachment,\n        //                 }}\n        //                 alt=\"attachment\"\n        //             />\n        //             <div\n        //                 className=\"factoryForm__clear\"\n        //                 onClick={onClearAttachment}\n        //             >\n        //                 <span>Remove</span>\n        //                 <FontAwesomeIcon icon={faTimes} />\n        //             </div>\n        //         </div>\n        //     )}\n        // </form>\n        <div className=\"center\">\n            <Link to=\"/new\" className=\"factoryInput__link\">\n                글 쓰기\n            </Link>\n        </div>\n    );\n};\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService\n            .collection(\"nweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const nweetArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setNweets(nweetArray);\n            });\n    }, []);\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        editPriority={\n                            nweet.creatorId === userObj.uid ||\n                            userObj.priority === 1\n                        }\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\n        >\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon\n                        icon={faTwitter}\n                        color={\"#04AAFF\"}\n                        size=\"2x\"\n                    />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon\n                        icon={faUser}\n                        color={\"#04AAFF\"}\n                        size=\"2x\"\n                    />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Detail = ({ userObj }) => {\n    const { postId } = useParams();\n    const doc = dbService.collection(\"nweets\").doc(postId);\n    const [title, setTitle] = useState(\"\");\n    const [post, setPost] = useState(\"\");\n    const [creater, setCreater] = useState(\"\");\n    const history = useHistory();\n\n    doc.get()\n        .then((doc) => {\n            if (doc.exists) {\n                setPost(doc.data().desc);\n                setTitle(doc.data().title);\n                setCreater(doc.data().creatorId);\n            } else {\n                alert(\"삭제되었거나 없는 게시물입니다.\");\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    console.log(creater);\n    console.log(userObj);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"정말 삭제하시겠습니까?\");\n        if (ok) {\n            await dbService.doc(`nweets/${postId}`).delete();\n            history.push(\"/\");\n        }\n    };\n\n    return (\n        <>\n            <span className=\"post__title\">{title}</span>\n            {creater === userObj.uid && (\n                <span onClick={onDeleteClick}>\n                    <FontAwesomeIcon\n                        icon={faTrash}\n                        size=\"lg\"\n                        className=\"trashIcon\"\n                    />\n                </span>\n            )}\n            <hr className=\"post__hr\" />\n            <div\n                className=\"post__desc\"\n                dangerouslySetInnerHTML={{ __html: post }}\n            ></div>\n        </>\n    );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst modules = {\n    toolbar: [\n        //[{ 'font': [] }],\n        [{ header: [1, 2, false] }],\n        [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n        [\n            { list: \"ordered\" },\n            { list: \"bullet\" },\n            { indent: \"-1\" },\n            { indent: \"+1\" },\n        ],\n        [\"link\", \"image\"],\n        [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\n        [\"clean\"],\n    ],\n};\n\nconst formats = [\n    //'font',\n    \"header\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"align\",\n    \"color\",\n    \"background\",\n];\n\nconst PostFactory = ({ value, onChange }) => {\n    return (\n        <div style={{ height: \"650px\" }}>\n            <ReactQuill\n                style={{ height: \"600px\" }}\n                theme=\"snow\"\n                modules={modules}\n                formats={formats}\n                value={value || \"\"}\n                onChange={onChange}\n            />\n        </div>\n    );\n};\n\nexport default PostFactory;\n","import React from \"react\";\n\nconst TitleFactory = ({ title, onChange }) => {\n    return (\n        <input\n            className=\"factoryInput__title\"\n            value={title || \"\"}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"제목을 입력하세요.\"\n            maxLength={120}\n        />\n    );\n};\n\nexport default TitleFactory;\n","import React, { useState } from \"react\";\nimport PostFactory from \"./PostFactory\";\nimport TitleFactory from \"./TitleFactory\";\nimport { dbService } from \"fbase\";\nimport { useHistory } from \"react-router\";\n\nconst Post = ({ userObj }) => {\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const history = useHistory();\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (title === \"\") {\n            alert(\"제목을 입력하세요.\");\n            document.getElementsByClassName(\"factoryInput__title\")[0].focus();\n            return;\n        } else if (desc === \"\") {\n            alert(\"본문을 입력하세요.\");\n            document.getElementsByClassName(\"ql-editor\")[0].focus();\n            return;\n        }\n        const day = new Date();\n        const nweetObj = {\n            title: title,\n            desc: desc,\n            createdAt: day.toLocaleString(),\n            creatorId: userObj.uid,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setTitle(\"\");\n        setDesc(\"\");\n        history.push(\"/\");\n    };\n    const onTitleChange = (e) => {\n        const {\n            target: { value },\n        } = e;\n        setTitle(value);\n    };\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div>\n                <TitleFactory title={title} onChange={onTitleChange} />\n                <PostFactory value={desc} onChange={setDesc} />\n                <div className=\"center\">\n                    <input\n                        type=\"submit\"\n                        value=\"완료\"\n                        className=\"factoryInput__arrow\"\n                    />\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\nimport Detail from \"routes/Detail\";\nimport Post from \"./Post\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                <>\n                    {isLoggedIn ? (\n                        <div\n                            style={{\n                                maxWidth: 890,\n                                width: \"100%\",\n                                margin: \"0 auto\",\n                                marginTop: 50,\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <Route exact path=\"/\">\n                                <Home userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/profile\">\n                                <Profile\n                                    userObj={userObj}\n                                    refreshUser={refreshUser}\n                                />\n                            </Route>\n                            <Route exact path=\"/detail/:postId\">\n                                <Detail userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/new\">\n                                <Post userObj={userObj} />\n                            </Route>\n                        </div>\n                    ) : (\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth />\n                            </Route>\n                        </>\n                    )}\n                </>\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    const adminList = [\n        \"iZ8twQlEqYfTII6mCbP2sqNmmRE3\",\n        \"yRH74zbkCsYlfQjDzreVbHEa1EC2\",\n    ];\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                const priority = adminList.includes(user.uid) ? 1 : 0;\n                // 1 = admin, 0 = not admin\n                setUserObj({\n                    displayName: user.displayName,\n\n                    uid: user.uid,\n                    priority: priority,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n        // eslint-disable-next-line\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        const priority = adminList.includes(user.uid) ? 1 : 0;\n        // 1 = admin, 0 = not admin\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            priority: priority,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <BrowserRouter>\n                    <AppRouter\n                        refreshUser={refreshUser}\n                        isLoggedIn={Boolean(userObj)}\n                        userObj={userObj}\n                    />\n                </BrowserRouter>\n            ) : (\n                \"Initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}