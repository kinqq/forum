{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","routes/Forum.js","routes/Profile.js","components/Navigation.js","routes/Detail.js","components/PostFactory.js","components/TitleFactory.js","components/Post.js","components/Time.js","components/Home.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","repassword","setRepassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","alert","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","signInWithPopup","Nweet","nweetObj","editPriority","to","id","title","Forum","userObj","category","nweets","setNweets","useEffect","collection","orderBy","onSnapshot","snapshot","nweetArray","docs","map","doc","border","bordercolor","style","marginTop","nweet","key","creatorId","uid","priority","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","Navigation","Detail","postId","useParams","setTitle","post","setPost","creater","setCreater","createrName","setCreaterName","createTime","setCreateTime","get","then","exists","desc","creatorName","createdAt","catch","onDeleteClick","window","confirm","delete","icon","faTrash","size","dangerouslySetInnerHTML","__html","modules","toolbar","header","list","indent","align","color","background","formats","PostFactory","height","theme","TitleFactory","onCategoryChange","maxLength","disabled","hidden","Post","setDesc","setCategory","en","result","document","getElementsByClassName","focus","st","indexOf","attachmentRef","ref","child","uuidv4","putString","substring","response","getDownloadURL","downloadURL","length","day","Date","toLocaleString","add","e","timetable","Timetable","init","setSchool","getTimetable","Home","class","AppRouter","isLoggedIn","maxWidth","width","margin","display","flexWrap","justifyContent","exact","path","Profile","Time","App","setInit","setUserObj","adminList","onAuthStateChanged","user","includes","args","currentUser","Boolean","ReactDOM","render","getElementById"],"mappings":"mpBAgBAA,gBAVuB,CACnBC,OAAQC,0CACRC,WAAYD,mCACZE,YAAaF,+CACbG,UAAWH,mBACXI,cAAeJ,+BACfK,kBAAmBL,eACnBM,MAAON,8CAKJ,IAAMO,EAAmBT,EAEnBU,EAAcV,SACdW,EAAYX,cACZY,EAAiBZ,YCyEfa,EA5FE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,mBAAS,IAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAIiBN,oBAAS,GAJ1B,mBAIZO,EAJY,KAIAC,EAJA,OAKKR,mBAAS,IALd,mBAKdS,EALc,KAKPC,EALO,KAMbC,EAAW,SAACC,GAAW,IAAD,EAGpBA,EADAC,OAAUC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,MAEP,UAATD,EACAZ,EAASa,GACO,aAATD,EACPV,EAAYW,GACI,eAATD,GACPR,EAAcS,IAGhBC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAILX,EAJK,oBAKDJ,IAAaE,EALZ,uBAMDc,MAAM,oHANL,0CASQvB,EAAYwB,+BACrBnB,EACAE,GAXC,OASLkB,EATK,OAaLF,MAAM,0HAbD,yCAeQvB,EAAY0B,2BACrBrB,EACAE,GAjBC,QAeLkB,EAfK,OAmBLF,MAAM,oHAnBD,QAqBTI,QAAQC,IAAIH,GArBH,kDAuBTX,EAAS,KAAMe,SAvBN,0DAAH,sDA2Bd,OACI,oCACI,0BAAMT,SAAUA,EAAUU,UAAU,aAChC,2BACIZ,KAAK,QACLa,KAAK,QACLC,YAAY,qBACZC,UAAQ,EACRd,MAAOd,EACPU,SAAUA,EACVe,UAAU,cAEd,2BACIZ,KAAK,WACLa,KAAK,WACLC,YAAY,2BACZC,UAAQ,EACRd,MAAOZ,EACPuB,UAAU,YACVf,SAAUA,IAEbJ,GACG,2BACIO,KAAK,aACLa,KAAK,WACLC,YAAY,8CACZC,UAAQ,EACRd,MAAOV,EACPqB,UAAU,YACVf,SAAUA,IAIlB,2BACIgB,KAAK,SACLD,UAAU,uBACVX,MAAOR,EAAa,2BAAS,uBAEhCE,GAAS,0BAAMiB,UAAU,aAAajB,GACvC,0BAAMqB,QAxCI,kBAAMtB,GAAc,SAACuB,GAAD,OAAWA,MAwCXL,UAAU,cACnCnB,EAAa,qBAAQ,+BC3D3ByB,EAvBF,WACT,IAAMC,EAAa,uCAAG,4BAAAhB,EAAA,6DACdiB,EAAW,IAAIvC,EAAiBwC,KAAKC,mBADvB,SAEZxC,EAAYyC,gBAAgBH,GAFhB,2CAAH,qDAInB,OACI,yBAAKR,UAAU,iBACX,yBAAKA,UAAU,aAAf,qBACA,yBAAKA,UAAU,YACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,YACX,4BACII,QAASG,EACTnB,KAAK,SACLY,UAAU,WAHd,kD,SCJDY,EAZD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAA6B,EAAnBC,aACvB,OACI,wBAAId,UAAU,SACV,4BACI,kBAAC,IAAD,CAAMe,GAAE,kBAAaF,EAASG,KAC1B,4BAAKH,EAASI,WCyCnBC,EA3CD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EACT9C,mBAAS,IADA,mBAC9B+C,EAD8B,KACtBC,EADsB,KAerC,OAbAzB,QAAQC,IAAIsB,GACZG,qBAAU,WACNpD,EACKqD,WAAW,UACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACT,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACjCf,GAAIe,EAAIf,IACLe,EAAIpC,WAEX2B,EAAUM,QAEnB,IAEC,yBAAK5B,UAAU,aACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAMe,GAAG,OAAOf,UAAU,sBAA1B,wBAIJ,2BAAOgC,OAAO,KAAKC,YAAY,MAAMC,MAAO,CAAEC,UAAW,KACrD,+BACKd,EAAOS,KAAI,SAACM,GACT,OACIA,EAAMhB,WAAaA,GACf,kBAAC,EAAD,CACIiB,IAAKD,EAAMpB,GACXH,SAAUuB,EACVtB,aACIsB,EAAME,YAAcnB,EAAQoB,KACP,IAArBpB,EAAQqB,kBCjCjC,cAA+B,IAA5BC,EAA2B,EAA3BA,YAAatB,EAAc,EAAdA,QACrBuB,EAAUC,cADyB,EAEGrE,mBAAS6C,EAAQyB,aAFpB,mBAElCC,EAFkC,KAElBC,EAFkB,KAcnCxD,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACF2B,EAAQyB,cAAgBC,EAFf,gCAGH1B,EAAQ4B,cAAc,CACxBH,YAAaC,IAJR,OAMTJ,IACAhD,MAAM,sBAAD,OAAQoD,EAAR,+DAPI,2CAAH,sDAUd,OACI,yBAAK7C,UAAU,aACX,0BAAMV,SAAUA,EAAUU,UAAU,eAChC,2BACIf,SApBC,SAACC,GAAW,IAEXG,EACVH,EADAC,OAAUE,MAEdyD,EAAkBzD,IAiBNY,KAAK,OACL+C,WAAS,EACT9C,YAAY,OACZb,MAAOwD,EACP7C,UAAU,cAEd,2BACIC,KAAK,SACLZ,MAAM,4BACNW,UAAU,UACVkC,MAAO,CACHC,UAAW,OAIvB,0BAAMnC,UAAU,2BAA2BI,QAzC7B,WAClBlC,EAAY+E,UACZxD,MAAM,0HACNiD,EAAQQ,KAAK,OAsCT,4BAGA,yBAAKlD,UAAU,SAASkC,MAAO,CAAEC,UAAW,KACvChB,EAAQqB,SACL,yBAAKxC,UAAU,iBAAf,qBAEA,wCCrBLmD,EA/BI,kBACf,yBAAKnD,UAAU,OACX,4BACI,4BACI,kBAAC,IAAD,CAAMA,UAAU,UAAUe,GAAG,KAA7B,WAIJ,4BACI,kBAAC,IAAD,CAAMf,UAAU,UAAUe,GAAG,SACzB,+EAGR,4BACI,kBAAC,IAAD,CAAMf,UAAU,UAAUe,GAAG,aACzB,+EAGR,4BACI,kBAAC,IAAD,CAAMf,UAAU,UAAUe,GAAG,SACzB,mEAGR,4BACI,kBAAC,IAAD,CAAMf,UAAU,UAAUe,GAAG,YACzB,yD,SCwCLqC,EA9DA,SAAC,GAAiB,IAAfjC,EAAc,EAAdA,QACNkC,EAAWC,cAAXD,OACFtB,EAAM5D,EAAUqD,WAAW,UAAUO,IAAIsB,GAFnB,EAGF/E,mBAAS,IAHP,mBAGrB2C,EAHqB,KAGdsC,EAHc,OAIJjF,mBAAS,IAJL,mBAIrBkF,EAJqB,KAIfC,EAJe,OAKEnF,mBAAS,IALX,mBAKrBoF,EALqB,KAKZC,EALY,OAMUrF,mBAAS,IANnB,mBAMrBsF,EANqB,KAMRC,EANQ,OAOQvF,mBAAS,IAPjB,mBAOrBwF,EAPqB,KAOTC,EAPS,KAQtBrB,EAAUC,cAChBZ,EAAIiC,MACCC,MAAK,SAAClC,GACCA,EAAImC,QACJT,EAAQ1B,EAAIpC,OAAOwE,MACnBZ,EAASxB,EAAIpC,OAAOsB,OACpB0C,EAAW5B,EAAIpC,OAAO2C,WACtBuB,EAAe9B,EAAIpC,OAAOyE,aAC1BL,EAAchC,EAAIpC,OAAO0E,YAEzB5E,MAAM,8FAGb6E,OAAM,SAACvF,GACJc,QAAQC,IAAIf,MAEpB,IAAMwF,EAAa,uCAAG,sBAAAhF,EAAA,0DACPiF,OAAOC,QAAQ,kEADR,gCAGRtG,EAAU4D,IAAV,iBAAwBsB,IAAUqB,SAH1B,OAIdhC,EAAQQ,KAAK,KAJC,2CAAH,qDAQnB,OACI,oCACI,0BAAMlD,UAAU,eACXiB,EACAyC,IAAYvC,EAAQoB,KAAOpB,EAAQqB,SAChC,0BAAMpC,QAASmE,GACX,kBAAC,IAAD,CACII,KAAMC,IACNC,KAAK,KACL7E,UAAU,eAIlB,sCAIR,wBAAIA,UAAU,aACd,yBACIA,UAAU,aACV8E,wBAAyB,CAAEC,OAAQvB,KAGvC,yBAAKxD,UAAU,iBAAf,cACgB4D,EADhB,OACiCE,K,kBC1DvCkB,G,OAAU,CACZC,QAAS,CAEL,CAAC,CAAEC,OAAQ,CAAC,EAAG,GAAG,KAClB,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CACI,CAAEC,KAAM,WACR,CAAEA,KAAM,UACR,CAAEC,OAAQ,MACV,CAAEA,OAAQ,OAEd,CAAC,OAAQ,SACT,CAAC,CAAEC,MAAO,IAAM,CAAEC,MAAO,IAAM,CAAEC,WAAY,KAC7C,CAAC,YAIHC,EAAU,CAEZ,SACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,SACA,OACA,QACA,QACA,QACA,cAkBWC,EAfK,SAAC,GAAyB,IAAvBpG,EAAsB,EAAtBA,MAAOJ,EAAe,EAAfA,SAC1B,OACI,yBAAKe,UAAU,cAAckC,MAAO,CAAEwD,OAAQ,UAC1C,kBAAC,IAAD,CACIxD,MAAO,CAAEwD,OAAQ,SACjBC,MAAM,OACNX,QAASA,EACTQ,QAASA,EACTnG,MAAOA,GAAS,GAChBJ,SAAUA,M,SCjBX2G,EA7BM,SAAC,GAAqD,IAAnD3E,EAAkD,EAAlDA,MAAOhC,EAA2C,EAA3CA,SAAUmC,EAAiC,EAAjCA,SAAUyE,EAAuB,EAAvBA,iBAC/C,OACI,oCACI,2BACI7F,UAAU,sBACVX,MAAO4B,GAAS,GAChBhC,SAAUA,EACVgB,KAAK,OACLC,YAAY,qDACZ4F,UAAW,MAEf,8BACI,4BACI9F,UAAU,uBACVX,MAAO+B,EACPnC,SAAU4G,GAEV,4BAAQE,UAAQ,EAACC,QAAM,GAAvB,kEAGA,+EACA,+EACA,uECmFLC,EApGF,SAAC,GAAiB,IAAf9E,EAAc,EAAdA,QAAc,EACA7C,mBAAS,IADT,mBACnB2C,EADmB,KACZsC,EADY,OAEFjF,mBAAS,IAFP,mBAEnB6F,EAFmB,KAEb+B,EAFa,OAGM5H,mBAAS,kEAHf,mBAGnB8C,EAHmB,KAGT+E,EAHS,KAIpBzD,EAAUC,cACZyD,GAAM,EACNC,EAAS,GACP/G,EAAQ,uCAAG,WAAOJ,GAAP,yBAAAK,EAAA,yDACbM,QAAQC,IAAIsB,GACZiF,EAASlC,EACK,KAAVlD,EAHS,uBAITxB,MAAM,sDACN6G,SAASC,uBAAuB,uBAAuB,GAAGC,QALjD,6BAOW,mEAAbpF,EAPE,wBAQT3B,MAAM,kEACN6G,SAASC,uBAAuB,wBAAwB,GAAGC,QATlD,8BAWO,KAATrC,EAXE,wBAYT1E,MAAM,sDACN6G,SAASC,uBAAuB,aAAa,GAAGC,QAbvC,2BAiBbF,SAASC,uBAAuB,uBAAuB,GAAGlH,MACtD,wBAlBS,WAoBLoH,EAAKJ,EAAOK,QAAQ,aAAcN,GACtCA,EAAKC,EAAOK,QAAQ,KAAMD,EAAK,IACnB,IAARA,EAtBK,4DAyBHE,EAAgBvI,EACjBwI,MACAC,MAFiB,UAER1F,EAAQoB,IAFA,YAEOuE,gBA3BpB,UA4BcH,EAAcI,UACjCV,EAAOW,UAAUP,EAAK,GAAIL,GAC1B,YA9BK,eA4BHa,EA5BG,iBAgCiBA,EAASL,IAAIM,iBAhC9B,QAgCHC,EAhCG,OAiCTd,EACIA,EAAOW,UAAU,EAAGP,EAAK,IACzBU,EACAd,EAAOW,UAAUZ,EAAIC,EAAOe,QAChChB,EAAKC,EAAOK,QAAQ,KAAMD,EAAK,GAC/B5G,QAAQC,IAAIuG,GAtCH,+BAwCbnH,EAAMM,iBAEA6H,GAAM,IAAIC,MAAOC,iBACvB1H,QAAQC,IAAIsB,GACNP,EAAW,CACbI,MAAOA,EACPkD,KAAMkC,EACNjF,SAAUA,EACViD,UAAWgD,EACX/E,UAAWnB,EAAQoB,IACnB6B,YAAajD,EAAQyB,aAlDZ,UAoDPzE,EAAUqD,WAAW,UAAUgG,IAAI3G,GApD5B,QAqDb0C,EAAS,IACT2C,EAAQ,IACRxD,EAAQQ,KAAK,KAvDA,4CAAH,sDAsEd,OACI,0BAAM5D,SAAUA,EAAUU,UAAU,eAChC,6BACI,kBAAC,EAAD,CACIiB,MAAOA,EACPhC,SAlBM,SAACwI,GAAO,IAEZpI,EACVoI,EADAtI,OAAUE,MAEdkE,EAASlE,IAeG+B,SAAUA,EACVyE,iBAbS,SAAC4B,GAAO,IAEfpI,EACVoI,EADAtI,OAAUE,MAEd8G,EAAY9G,IAUAW,UAAU,iBAEd,kBAAC,EAAD,CAAaX,MAAO8E,EAAMlF,SAAUiH,IACpC,yBAAKlG,UAAU,UACX,2BACIC,KAAK,SACLZ,MAAM,eACNW,UAAU,4B,SCjG5B0H,EAAY,I,OAAIC,GAEP,aACXD,EAAUE,OACV/H,QAAQC,IAAI,eACZ4H,EAAUG,UAAU,kCACpBhI,QAAQC,IAAI,oBACZ,IAAMuG,EAASqB,EAAUI,eAIzB,OAHAjI,QAAQC,IAAI,wBACZD,QAAQC,IAAIuG,GAEL,2CCcI0B,EAxBF,WACT,OACI,yBAAK/H,UAAU,eACX,6BAASgI,MAAM,cACX,wBAAIA,MAAM,SACN,gEACA,mFACA,kEAGJ,wBAAIA,MAAM,SACN,oFACA,uGACA,yEAIR,kBAAC,IAAD,CAAMjH,GAAG,SACL,0BAAMf,UAAU,cAAhB,kDCyDDiI,EAnEG,SAAC,GAA0C,IAAxCxF,EAAuC,EAAvCA,YAAayF,EAA0B,EAA1BA,WAAY/G,EAAc,EAAdA,QAC1C,OACI,kBAAC,IAAD,KACK+G,GAAc,kBAAC,EAAD,MACf,kBAAC,IAAD,KACI,oCACKA,EACG,yBACIhG,MAAO,CACHiG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRlG,UAAW,GACXmG,QAAS,OACTC,SAAU,OACVC,eAAgB,WAGpB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SACd,kBAAC,EAAD,CACIvH,QAASA,EACTC,SAAS,iDAGjB,kBAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,aACd,kBAAC,EAAD,CACIvH,QAASA,EACTC,SAAS,iDAGjB,kBAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,SACd,kBAAC,EAAD,CACIvH,QAASA,EACTC,SAAS,qCAGjB,kBAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,YACd,kBAACC,EAAD,CACIxH,QAASA,EACTsB,YAAaA,KAGrB,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,mBACd,kBAAC,EAAD,CAAQvH,QAASA,KAErB,kBAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,QACd,kBAAC,EAAD,CAAMvH,QAASA,KAEnB,kBAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,SACd,kBAACE,EAAD,QAIR,oCACI,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,YCbjBG,MAnDf,WAAgB,IAAD,EACavK,oBAAS,GADtB,mBACJsJ,EADI,KACEkB,EADF,OAEmBxK,mBAAS,MAF5B,mBAEJ6C,EAFI,KAEK4H,EAFL,KAkCX,OA9BAxH,qBAAU,WACN,IAAMyH,EAAY,CAAC,gCACnB9K,EAAY+K,oBAAmB,SAACC,GAC5B,GAAIA,EAAM,CACN,IAAM1G,EAAWwG,EAAUG,SAASD,EAAK3G,KAAO,EAAI,EAEpDwG,EAAW,CACPnG,YAAasG,EAAKtG,YAClBL,IAAK2G,EAAK3G,IACVC,SAAUA,EACVO,cAAe,SAACqG,GAAD,OAAUF,EAAKnG,cAAcqG,WAGhDL,EAAW,MAEfD,GAAQ,QAEb,IAcC,oCACKlB,EACG,kBAAC,IAAD,KACI,kBAAC,EAAD,CACInF,YAjBA,WAChB,IACMyG,EAAOhL,EAAYmL,YACnB7G,EAFY,CAAC,gCAEQ2G,SAASD,EAAK3G,KAAO,EAAI,EAEpDwG,EAAW,CACPnG,YAAasG,EAAKtG,YAClBL,IAAK2G,EAAK3G,IACVC,SAAUA,EACVO,cAAe,SAACqG,GAAD,OAAUF,EAAKnG,cAAcqG,OAShClB,WAAYoB,QAAQnI,GACpBA,QAASA,KAIjB,oB,OC7ChBoI,IAASC,OAAO,kBAAC,EAAD,MAASlD,SAASmD,eAAe,W","file":"static/js/main.939bdce2.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport Firement from \"firement\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repassword, setRepassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(false);\n    let [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        } else if (name === \"repassword\") {\n            setRepassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                if (password !== repassword) {\n                    alert(\"비밀번호와 재입력한 비밀번호가 다릅니다.\");\n                    return;\n                }\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n                alert(\"회원가입 요청을 정상적으로 처리하였습니다.\");\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email,\n                    password\n                );\n                alert(\"로그인 요청을 정상적으로 처리하였습니다.\");\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"이메일\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"비밀번호\"\n                    required\n                    value={password}\n                    className=\"authInput\"\n                    onChange={onChange}\n                />\n                {newAccount && (\n                    <input\n                        name=\"repassword\"\n                        type=\"password\"\n                        placeholder=\"비밀번호 재입력\"\n                        required\n                        value={repassword}\n                        className=\"authInput\"\n                        onChange={onChange}\n                    />\n                )}\n\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccount ? \"회원가입\" : \"로그인\"}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n                <span onClick={toggleAccount} className=\"authSwitch\">\n                    {newAccount ? \"로그인\" : \"회원가입\"}\n                </span>\n            </form>\n        </>\n    );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async () => {\n        let provider = new firebaseInstance.auth.GoogleAuthProvider();\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <div className=\"authContainer\">\n            <div className=\"authTitle\">2-10 포럼</div>\n            <div className=\"authBtns\">\n                <AuthForm />\n            </div>\n            <div className=\"authBtns\">\n                <button\n                    onClick={onSocialClick}\n                    name=\"google\"\n                    className=\"authBtn\"\n                >\n                    Google로 로그인하기\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default Auth;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Nweet = ({ nweetObj, editPriority }) => {\n    return (\n        <tr className=\"nweet\">\n            <th>\n                <Link to={`/detail/${nweetObj.id}`}>\n                    <h4>{nweetObj.title}</h4>\n                </Link>\n            </th>\n        </tr>\n    );\n};\n\nexport default Nweet;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport { Link } from \"react-router-dom\";\n\nconst Forum = ({ userObj, category }) => {\n    const [nweets, setNweets] = useState([]);\n    console.log(category);\n    useEffect(() => {\n        dbService\n            .collection(\"nweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const nweetArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setNweets(nweetArray);\n            });\n    }, []);\n    return (\n        <div className=\"container\">\n            <div className=\"center\">\n                <Link to=\"/new\" className=\"factoryInput__link\">\n                    글 쓰기\n                </Link>\n            </div>\n            <table border=\"10\" bordercolor=\"red\" style={{ marginTop: 30 }}>\n                <tbody>\n                    {nweets.map((nweet) => {\n                        return (\n                            nweet.category === category && (\n                                <Nweet\n                                    key={nweet.id}\n                                    nweetObj={nweet}\n                                    editPriority={\n                                        nweet.creatorId === userObj.uid ||\n                                        userObj.priority === 1\n                                    }\n                                />\n                            )\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\nexport default Forum;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        alert(\"로그아웃 요청을 정상적으로 처리하였습니다.\");\n        history.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n            alert(`이름이 ${newDisplayName}(으)로 변경되었습니다.`);\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"이름 변경\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                로그아웃\n            </span>\n            <div className=\"center\" style={{ marginTop: 50 }}>\n                {userObj.priority ? (\n                    <div className=\"post__creator\">You are an admin.</div>\n                ) : (\n                    <></>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => (\n    <nav className=\"gnb\">\n        <ul>\n            <li>\n                <Link className=\"navLink\" to=\"/\">\n                    홈\n                </Link>\n            </li>\n            <li>\n                <Link className=\"navLink\" to=\"/test\">\n                    <span>수행평가 게시판</span>\n                </Link>\n            </li>\n            <li>\n                <Link className=\"navLink\" to=\"/schedule\">\n                    <span>학사일정 게시판</span>\n                </Link>\n            </li>\n            <li>\n                <Link className=\"navLink\" to=\"/free\">\n                    <span>자유 게시판</span>\n                </Link>\n            </li>\n            <li>\n                <Link className=\"navLink\" to=\"/profile\">\n                    <span>프로필</span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Detail = ({ userObj }) => {\n    const { postId } = useParams();\n    const doc = dbService.collection(\"nweets\").doc(postId);\n    const [title, setTitle] = useState(\"\");\n    const [post, setPost] = useState(\"\");\n    const [creater, setCreater] = useState(\"\");\n    const [createrName, setCreaterName] = useState(\"\");\n    const [createTime, setCreateTime] = useState(\"\");\n    const history = useHistory();\n    doc.get()\n        .then((doc) => {\n            if (doc.exists) {\n                setPost(doc.data().desc);\n                setTitle(doc.data().title);\n                setCreater(doc.data().creatorId);\n                setCreaterName(doc.data().creatorName);\n                setCreateTime(doc.data().createdAt);\n            } else {\n                alert(\"삭제되었거나 없는 게시물입니다.\");\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"정말 삭제하시겠습니까?\");\n        if (ok) {\n            await dbService.doc(`nweets/${postId}`).delete();\n            history.push(\"/\");\n        }\n    };\n\n    return (\n        <>\n            <span className=\"post__title\">\n                {title}\n                {creater === userObj.uid || userObj.priority ? (\n                    <span onClick={onDeleteClick}>\n                        <FontAwesomeIcon\n                            icon={faTrash}\n                            size=\"xs\"\n                            className=\"trashIcon\"\n                        />\n                    </span>\n                ) : (\n                    <></>\n                )}\n            </span>\n\n            <hr className=\"post__hr\" />\n            <div\n                className=\"post__desc\"\n                dangerouslySetInnerHTML={{ __html: post }}\n            ></div>\n\n            <div className=\"post__creator\">\n                Written By {createrName} at {createTime}\n            </div>\n        </>\n    );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst modules = {\n    toolbar: [\n        //[{ 'font': [] }],\n        [{ header: [1, 2, false] }],\n        [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n        [\n            { list: \"ordered\" },\n            { list: \"bullet\" },\n            { indent: \"-1\" },\n            { indent: \"+1\" },\n        ],\n        [\"link\", \"image\"],\n        [{ align: [] }, { color: [] }, { background: [] }], // dropdown with defaults from theme\n        [\"clean\"],\n    ],\n};\n\nconst formats = [\n    //'font',\n    \"header\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"align\",\n    \"color\",\n    \"background\",\n];\n\nconst PostFactory = ({ value, onChange }) => {\n    return (\n        <div className=\"postfactory\" style={{ height: \"650px\" }}>\n            <ReactQuill\n                style={{ height: \"600px\" }}\n                theme=\"snow\"\n                modules={modules}\n                formats={formats}\n                value={value || \"\"}\n                onChange={onChange}\n            />\n        </div>\n    );\n};\n\nexport default PostFactory;\n","import React from \"react\";\n\nconst TitleFactory = ({ title, onChange, category, onCategoryChange }) => {\n    return (\n        <>\n            <input\n                className=\"factoryInput__title\"\n                value={title || \"\"}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"제목을 입력하세요.\"\n                maxLength={120}\n            />\n            <form>\n                <select\n                    className=\"titleFactory__select\"\n                    value={category}\n                    onChange={onCategoryChange}\n                >\n                    <option disabled hidden>\n                        게시판을 선택해주세요.\n                    </option>\n                    <option>수행평가 게시판</option>\n                    <option>학사일정 게시판</option>\n                    <option>자유 게시판</option>\n                </select>\n            </form>\n        </>\n    );\n};\n\nexport default TitleFactory;\n","import React, { useState } from \"react\";\nimport PostFactory from \"./PostFactory\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TitleFactory from \"./TitleFactory\";\nimport { storageService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router\";\n\nconst Post = ({ userObj }) => {\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [category, setCategory] = useState(\"게시판을 선택해주세요.\");\n    const history = useHistory();\n    let en = -1;\n    let result = \"\";\n    const onSubmit = async (event) => {\n        console.log(category);\n        result = desc;\n        if (title === \"\") {\n            alert(\"제목을 입력하세요.\");\n            document.getElementsByClassName(\"factoryInput__title\")[0].focus();\n            return;\n        } else if (category === \"게시판을 선택해주세요.\") {\n            alert(\"카테고리를 선택하세요.\");\n            document.getElementsByClassName(\"titleFactory__select\")[0].focus();\n            return;\n        } else if (desc === \"\") {\n            alert(\"본문을 입력하세요.\");\n            document.getElementsByClassName(\"ql-editor\")[0].focus();\n            return;\n        }\n\n        document.getElementsByClassName(\"factoryInput__arrow\")[0].value =\n            \"게시중...\";\n        while (1) {\n            let st = result.indexOf('<img src=\"', en);\n            en = result.indexOf('\">', st + 1);\n            if (st === -1) {\n                break;\n            }\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                result.substring(st + 10, en),\n                \"data_url\"\n            );\n            const downloadURL = await response.ref.getDownloadURL();\n            result =\n                result.substring(0, st + 10) +\n                downloadURL +\n                result.substring(en, result.length);\n            en = result.indexOf('\">', st + 1);\n            console.log(result);\n        }\n        event.preventDefault();\n\n        const day = new Date().toLocaleString();\n        console.log(category);\n        const nweetObj = {\n            title: title,\n            desc: result,\n            category: category,\n            createdAt: day,\n            creatorId: userObj.uid,\n            creatorName: userObj.displayName,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setTitle(\"\");\n        setDesc(\"\");\n        history.push(\"/\");\n    };\n    const onTitleChange = (e) => {\n        const {\n            target: { value },\n        } = e;\n        setTitle(value);\n    };\n\n    const onCategoryChange = (e) => {\n        const {\n            target: { value },\n        } = e;\n        setCategory(value);\n    };\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div>\n                <TitleFactory\n                    title={title}\n                    onChange={onTitleChange}\n                    category={category}\n                    onCategoryChange={onCategoryChange}\n                    className=\"titlefactory\"\n                />\n                <PostFactory value={desc} onChange={setDesc} />\n                <div className=\"center\">\n                    <input\n                        type=\"submit\"\n                        value=\"게시\"\n                        className=\"factoryInput__arrow\"\n                    />\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default Post;\n","import React from \"react\";\nimport Timetable from \"comcigan-parser\";\nconst timetable = new Timetable();\n\nexport default () => {\n    timetable.init();\n    console.log(\"init finish\");\n    timetable.setSchool(\"덕이중학교\");\n    console.log(\"setschool finish\");\n    const result = timetable.getTimetable();\n    console.log(\"get timetable finish\");\n    console.log(result);\n\n    return <div>TimeTable</div>;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n    return (\n        <div className=\"home__title\">\n            <section class=\"scontainer\">\n                <h1 class=\"title\">\n                    <span>안녕하세요</span>\n                    <span>2-10 포럼에 오신 것을</span>\n                    <span>환영합니다.</span>\n                </h1>\n\n                <h2 class=\"title\">\n                    <span>이 사이트는 정보를</span>\n                    <span>쉽고 빠르게 공유하기 위한</span>\n                    <span>사이트입니다.</span>\n                </h2>\n            </section>\n\n            <Link to=\"/test\">\n                <span className=\"home__link\">수행평가 게시판</span>\n            </Link>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Forum from \"routes/Forum\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\nimport Detail from \"routes/Detail\";\nimport Post from \"./Post\";\nimport Time from \"./Time\";\nimport Home from \"./Home\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation />}\n            <Switch>\n                <>\n                    {isLoggedIn ? (\n                        <div\n                            style={{\n                                maxWidth: 890,\n                                width: \"100%\",\n                                margin: \"0 auto\",\n                                marginTop: 50,\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <Route exact path=\"/\">\n                                <Home />\n                            </Route>\n                            <Route exact path=\"/test\">\n                                <Forum\n                                    userObj={userObj}\n                                    category=\"수행평가 게시판\"\n                                />\n                            </Route>\n                            <Route exact path=\"/schedule\">\n                                <Forum\n                                    userObj={userObj}\n                                    category=\"학사일정 게시판\"\n                                />\n                            </Route>\n                            <Route exact path=\"/free\">\n                                <Forum\n                                    userObj={userObj}\n                                    category=\"자유 게시판\"\n                                />\n                            </Route>\n                            <Route exact path=\"/profile\">\n                                <Profile\n                                    userObj={userObj}\n                                    refreshUser={refreshUser}\n                                />\n                            </Route>\n                            <Route exact path=\"/detail/:postId\">\n                                <Detail userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/new\">\n                                <Post userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/time\">\n                                <Time />\n                            </Route>\n                        </div>\n                    ) : (\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth />\n                            </Route>\n                        </>\n                    )}\n                </>\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        const adminList = [\"hRpeUOmi27bBm2MDVbsrd58FTX93\"];\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                const priority = adminList.includes(user.uid) ? 1 : 0;\n                // 1 = admin, 0 = not admin\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    priority: priority,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const adminList = [\"hRpeUOmi27bBm2MDVbsrd58FTX93\"];\n        const user = authService.currentUser;\n        const priority = adminList.includes(user.uid) ? 1 : 0;\n        // 1 = admin, 0 = not admin\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            priority: priority,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <BrowserRouter>\n                    <AppRouter\n                        refreshUser={refreshUser}\n                        isLoggedIn={Boolean(userObj)}\n                        userObj={userObj}\n                    />\n                </BrowserRouter>\n            ) : (\n                \"Initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}